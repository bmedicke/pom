// Code generated by goa v3.7.3, DO NOT EDIT.
//
// get endpoints
//
// Command:
// $ goa gen github.com/bmedicke/pom/api/design -o api

package get

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "get" service endpoints.
type Endpoints struct {
	State goa.Endpoint
}

// NewEndpoints wraps the methods of the "get" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		State: NewStateEndpoint(s),
	}
}

// Use applies the given middleware to all the "get" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.State = m(e.State)
}

// NewStateEndpoint returns an endpoint function that calls the method "state"
// of service "get".
func NewStateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.State(ctx)
	}
}
